package festivalaplikacija.klijent.ki.komponenta.program.panel;

import festivalaplikacija.klijent.ki.komponenta.mojtabelamodel.ProgramTabelaModel;
import festivalaplikacija.klijent.operacija.ZahtevKlijent;
import festivalaplikacija.klijent.validacija.Validacija;
import festivalaplikacija.zajednicki.domen.DanProgram;
import festivalaplikacija.zajednicki.domen.Izvodjac;
import festivalaplikacija.zajednicki.domen.Program;
import festivalaplikacija.zajednicki.domen.Prostor;
import festivalaplikacija.zajednicki.domen.VrstaPrograma;
import festivalaplikacija.zajednicki.domen.VrstaProstora;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Du≈°an Kalejski dramski pedagog
 */
public class MojPanelDanProgram extends javax.swing.JPanel {

    private List<Program> programi;
    JDialog dialog;
    DanProgram dan;
    Prostor prostorZaIzmenu;
    VrstaPrograma vrstaProgramaZaIzmenu;
    Integer redZaDodavanje = -1;
    List<Program> programiZaUnos;
    SimpleDateFormat dateFormat;

    /**
     * Creates new form MojPanelDanProgram
     */
    public MojPanelDanProgram(List<Program> programi, JDialog dialog, DanProgram dan) {
        initComponents();
        this.programi = programi;
        this.dialog = dialog;
        this.dan = dan;
        programiZaUnos = new ArrayList<>();
        this.dateFormat = new SimpleDateFormat("dd.MM.yyyy");
        pripremiFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupVrstaProstora = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMojPanelDanProgram = new javax.swing.JTable();
        pnlVrstaPrograma = new javax.swing.JPanel();
        lblNazivVrstaPrograma = new javax.swing.JLabel();
        txtNazivVrstaPrograma = new javax.swing.JTextField();
        btnDodajVrstaPrograma = new javax.swing.JButton();
        btnOdustaniVrstaPrograma = new javax.swing.JButton();
        btnIzmeniVrstaPrograma = new javax.swing.JButton();
        btnObrisiVrstaPrograma = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listVrstePrograma = new javax.swing.JList<>();
        pnlProstor = new javax.swing.JPanel();
        lblNazivProstor = new javax.swing.JLabel();
        txtNazivProstor = new javax.swing.JTextField();
        btnDodajProstor = new javax.swing.JButton();
        lblKapacitetProstor = new javax.swing.JLabel();
        txtKapacitetProstor = new javax.swing.JTextField();
        pnlVrstaProstora = new javax.swing.JPanel();
        radioButtonOtvoreni = new javax.swing.JRadioButton();
        radioButtonZatvoreni = new javax.swing.JRadioButton();
        btnOdustaniProstor = new javax.swing.JButton();
        btnIzmeniProstor = new javax.swing.JButton();
        btnObrisiProstor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listProstori = new javax.swing.JList<>();
        btnDodajRed = new javax.swing.JButton();
        btnObrisiRed = new javax.swing.JButton();
        btnSacuvajIzmene = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();

        tblMojPanelDanProgram.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane1.setViewportView(tblMojPanelDanProgram);

        pnlVrstaPrograma.setBackground(new java.awt.Color(204, 217, 227));
        pnlVrstaPrograma.setBorder(javax.swing.BorderFactory.createTitledBorder("Vrsta programa"));
        pnlVrstaPrograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlVrstaProgramaMouseClicked(evt);
            }
        });

        lblNazivVrstaPrograma.setText("Naziv:");

        txtNazivVrstaPrograma.setText("jTextField1");

        btnDodajVrstaPrograma.setText("Dodaj");
        btnDodajVrstaPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajVrstaProgramaActionPerformed(evt);
            }
        });

        btnOdustaniVrstaPrograma.setText("Odustani");
        btnOdustaniVrstaPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniVrstaProgramaActionPerformed(evt);
            }
        });

        btnIzmeniVrstaPrograma.setText("Izmeni");
        btnIzmeniVrstaPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniVrstaProgramaActionPerformed(evt);
            }
        });

        btnObrisiVrstaPrograma.setText("Obrisi");
        btnObrisiVrstaPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiVrstaProgramaActionPerformed(evt);
            }
        });

        listVrstePrograma.setBorder(javax.swing.BorderFactory.createTitledBorder("Vrste programa:"));
        listVrstePrograma.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listVrstePrograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listVrsteProgramaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listVrstePrograma);

        javax.swing.GroupLayout pnlVrstaProgramaLayout = new javax.swing.GroupLayout(pnlVrstaPrograma);
        pnlVrstaPrograma.setLayout(pnlVrstaProgramaLayout);
        pnlVrstaProgramaLayout.setHorizontalGroup(
            pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                        .addGroup(pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                                .addComponent(lblNazivVrstaPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127))
                            .addComponent(txtNazivVrstaPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                    .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                        .addComponent(btnOdustaniVrstaPrograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIzmeniVrstaPrograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDodajVrstaPrograma)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisiVrstaPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlVrstaProgramaLayout.setVerticalGroup(
            pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                .addGroup(pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlVrstaProgramaLayout.createSequentialGroup()
                        .addComponent(lblNazivVrstaPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNazivVrstaPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlVrstaProgramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOdustaniVrstaPrograma)
                    .addComponent(btnIzmeniVrstaPrograma)
                    .addComponent(btnDodajVrstaPrograma)
                    .addComponent(btnObrisiVrstaPrograma))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlProstor.setBackground(new java.awt.Color(204, 217, 227));
        pnlProstor.setBorder(javax.swing.BorderFactory.createTitledBorder("Prostor"));
        pnlProstor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlProstorMouseClicked(evt);
            }
        });

        lblNazivProstor.setText("Naziv:");

        txtNazivProstor.setText("jTextField1");

        btnDodajProstor.setText("Dodaj");
        btnDodajProstor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajProstorActionPerformed(evt);
            }
        });

        lblKapacitetProstor.setText("Kapacitet:");

        txtKapacitetProstor.setText("jTextField3");

        pnlVrstaProstora.setBorder(javax.swing.BorderFactory.createTitledBorder("Vrsta:"));

        buttonGroupVrstaProstora.add(radioButtonOtvoreni);
        radioButtonOtvoreni.setText("Otvoreni");

        buttonGroupVrstaProstora.add(radioButtonZatvoreni);
        radioButtonZatvoreni.setText("Zatvoreni");

        javax.swing.GroupLayout pnlVrstaProstoraLayout = new javax.swing.GroupLayout(pnlVrstaProstora);
        pnlVrstaProstora.setLayout(pnlVrstaProstoraLayout);
        pnlVrstaProstoraLayout.setHorizontalGroup(
            pnlVrstaProstoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVrstaProstoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioButtonOtvoreni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioButtonZatvoreni)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlVrstaProstoraLayout.setVerticalGroup(
            pnlVrstaProstoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVrstaProstoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVrstaProstoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonOtvoreni)
                    .addComponent(radioButtonZatvoreni))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnOdustaniProstor.setText("Odustani");
        btnOdustaniProstor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniProstorActionPerformed(evt);
            }
        });

        btnIzmeniProstor.setText("Izmeni");
        btnIzmeniProstor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniProstorActionPerformed(evt);
            }
        });

        btnObrisiProstor.setText("Obrisi");
        btnObrisiProstor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiProstorActionPerformed(evt);
            }
        });

        listProstori.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista prostora:"));
        listProstori.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listProstori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listProstoriMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listProstori);

        javax.swing.GroupLayout pnlProstorLayout = new javax.swing.GroupLayout(pnlProstor);
        pnlProstor.setLayout(pnlProstorLayout);
        pnlProstorLayout.setHorizontalGroup(
            pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProstorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlProstorLayout.createSequentialGroup()
                        .addComponent(btnOdustaniProstor)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeniProstor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDodajProstor))
                    .addComponent(lblKapacitetProstor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNazivProstor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlVrstaProstora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNazivProstor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlProstorLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(txtKapacitetProstor)))
                .addGap(18, 18, 18)
                .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProstorLayout.createSequentialGroup()
                        .addComponent(btnObrisiProstor)
                        .addContainerGap(102, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );
        pnlProstorLayout.setVerticalGroup(
            pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProstorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProstorLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(pnlVrstaProstora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNazivProstor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(txtNazivProstor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKapacitetProstor)
                            .addComponent(txtKapacitetProstor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzmeniProstor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlProstorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnOdustaniProstor)
                        .addComponent(btnDodajProstor)
                        .addComponent(btnObrisiProstor)))
                .addContainerGap())
        );

        btnDodajRed.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDodajRed.setText("Dodaj program");
        btnDodajRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajRedActionPerformed(evt);
            }
        });

        btnObrisiRed.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnObrisiRed.setText("Obrisi program");
        btnObrisiRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiRedActionPerformed(evt);
            }
        });

        btnSacuvajIzmene.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSacuvajIzmene.setText("Sacuvaj Izmene");
        btnSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajIzmeneActionPerformed(evt);
            }
        });

        btnOdustani.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSacuvajIzmene, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodajRed, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnObrisiRed)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(pnlVrstaPrograma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlProstor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDodajRed)
                            .addComponent(btnObrisiRed))
                        .addGap(18, 18, 18)
                        .addComponent(pnlVrstaPrograma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlProstor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvajIzmene, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajRedActionPerformed

        try {
            int rowSelected = tblMojPanelDanProgram.getSelectedRow();
            ProgramTabelaModel programTabelaModel = (ProgramTabelaModel) tblMojPanelDanProgram.getModel();
            programTabelaModel.addRow(rowSelected);
            int rowCount = tblMojPanelDanProgram.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                try {
                    programTabelaModel.updateProgram(programi.get(i));
                    System.out.println("Program" + i + ": " + programi.get(i));
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            programi = ZahtevKlijent.findByDayProgrami(dan.getNaziv());
            popuniTabelu();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_btnDodajRedActionPerformed

    private void btnObrisiRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiRedActionPerformed
        try {
            int rowSelected = tblMojPanelDanProgram.getSelectedRow();
            if (rowSelected < 0) {
                JOptionPane.showMessageDialog(this, "Niste izabrali nijedan red iz tabele!");
                return;
            }
            int i = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete program iz baze?");
            if (i == 0) {
                ProgramTabelaModel programTabelaModel = (ProgramTabelaModel) tblMojPanelDanProgram.getModel();
                String nazivPrograma = (String) programTabelaModel.getValueAt(rowSelected, 0);
                String upit = "SELECT * FROM program WHERE naziv_programa = '" + nazivPrograma + "'";
                List<Program> programiZaBrisanje = ZahtevKlijent.findByQueryProgrami(upit);
                Program programZaBrisanje = programiZaBrisanje.get(0);

                ZahtevKlijent.deleteProgram(programZaBrisanje);
                JOptionPane.showMessageDialog(this, "Uspesno ste obrisali program iz baze");
                ProgramTabelaModel model = (ProgramTabelaModel) tblMojPanelDanProgram.getModel();
                model.deleteRow(rowSelected);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnObrisiRedActionPerformed

    private void btnSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajIzmeneActionPerformed

        int rowCount = tblMojPanelDanProgram.getRowCount();
        if (rowCount == 0) {
            dialog.dispose();
        } else {
            ProgramTabelaModel tabelaModel = (ProgramTabelaModel) tblMojPanelDanProgram.getModel();
            int potvrda = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izmenite podatke o programima?");
            if (potvrda != -1) {
                for (int i = 0; i < rowCount; i++) {
                    try {
                        tabelaModel.updateProgram(programi.get(i));
                        System.out.println("Program" + i + ": " + programi.get(i));
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    dialog.dispose();
                }
            }
        }
    }//GEN-LAST:event_btnSacuvajIzmeneActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        dialog.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnDodajVrstaProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajVrstaProgramaActionPerformed
        try {
            String nazivVrstaPrograma = txtNazivVrstaPrograma.getText();
            Validacija.getInstance().isEmpty(nazivVrstaPrograma);
            VrstaPrograma novaVrstaPrograma = new VrstaPrograma(0, nazivVrstaPrograma);
            ZahtevKlijent.addVrstaPrograma(novaVrstaPrograma);

            JOptionPane.showMessageDialog(this, "Uspesno ste dodali vrstu programa u bazu");
            pripremiFormu();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska u programu!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDodajVrstaProgramaActionPerformed

    private void pnlVrstaProgramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlVrstaProgramaMouseClicked
        setPnlVrstaProgramaEnable(true);
    }//GEN-LAST:event_pnlVrstaProgramaMouseClicked

    private void pnlProstorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlProstorMouseClicked
        setPnlProstorEnable(true);
    }//GEN-LAST:event_pnlProstorMouseClicked

    private void btnDodajProstorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajProstorActionPerformed
        try {
            String nazivProstora = txtNazivProstor.getText();
            Validacija.getInstance().isEmpty(nazivProstora);
            String kapacitetString = txtKapacitetProstor.getText();
            Validacija.getInstance().isNumber(kapacitetString);
            int kapacitet = Integer.parseInt(kapacitetString);
            Prostor noviProstor;
            if (radioButtonOtvoreni.isSelected()) {
                noviProstor = new Prostor(0, nazivProstora, kapacitet, VrstaProstora.OTVORENI);
            } else {
                noviProstor = new Prostor(0, nazivProstora, kapacitet, VrstaProstora.ZATVORENI);
            }
            ZahtevKlijent.addProstor(noviProstor);
            JOptionPane.showMessageDialog(this, "Uspesno ste dodali prostor u bazu");
            pripremiFormu();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnDodajProstorActionPerformed

    private void btnOdustaniVrstaProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniVrstaProgramaActionPerformed
        setPnlVrstaProgramaEnable(false);
    }//GEN-LAST:event_btnOdustaniVrstaProgramaActionPerformed

    private void btnOdustaniProstorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniProstorActionPerformed
        setPnlProstorEnable(false);
    }//GEN-LAST:event_btnOdustaniProstorActionPerformed

    private void btnIzmeniProstorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniProstorActionPerformed
        try {
            String nazivProstora = txtNazivProstor.getText();
            Validacija.getInstance().isEmpty(nazivProstora);
            String kapacitetString = txtKapacitetProstor.getText();
            Validacija.getInstance().isNumber(kapacitetString);
            int kapacitet = Integer.parseInt(kapacitetString);
            int id = prostorZaIzmenu.getId();
            Prostor promenjenProstor;
            if (radioButtonOtvoreni.isSelected()) {
                promenjenProstor = new Prostor(id, nazivProstora, kapacitet, VrstaProstora.OTVORENI);
            } else {
                promenjenProstor = new Prostor(id, nazivProstora, kapacitet, VrstaProstora.ZATVORENI);
            }
            ZahtevKlijent.updateProstor(promenjenProstor);
            JOptionPane.showMessageDialog(this, "Uspesno ste izmenili podatke o prostoru");
            programi = ZahtevKlijent.findByDayProgrami(dan.getNaziv());
            MojPanelDanProgram panel = new MojPanelDanProgram(programi, dialog, dan);
            dialog.add(panel);
            dialog.pack();
            pripremiFormu();

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniProstorActionPerformed

    private void btnObrisiProstorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiProstorActionPerformed

        List<String> naziviProstoraZaBrisanje = listProstori.getSelectedValuesList();
        if (naziviProstoraZaBrisanje.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste odabrali nijedan red it liste");
        } else {
            int i = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete prostor iz baze?");
            if (i == 0) {
                for (String nazivProstoraZaBrisanje : naziviProstoraZaBrisanje) {
                    try {
                        String upit = "SELECT * FROM prostor WHERE naziv_prostora = '" + nazivProstoraZaBrisanje + "'";
                        List<Prostor> prostoriFindByQuery = ZahtevKlijent.findByQueryProstor(upit);
                        Prostor prostorZaBrisanje = prostoriFindByQuery.get(0);
                        ZahtevKlijent.deleteProstor(prostorZaBrisanje);
                        JOptionPane.showMessageDialog(this, "Uspesno ste obrisali prostor iz baze");
                        popuniListe();
                        programi = ZahtevKlijent.findByDayProgrami(dan.getNaziv());
                        MojPanelDanProgram panel = new MojPanelDanProgram(programi, dialog, dan);
                        dialog.add(panel);
                        dialog.pack();
                        pripremiFormu();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_btnObrisiProstorActionPerformed

    private void listProstoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listProstoriMouseClicked
        setPnlProstorEnable(true);
        try {
            String nazivProstora = listProstori.getSelectedValue();
            String upit = "SELECT * FROM prostor WHERE naziv_prostora = '" + nazivProstora + "'";
            List<Prostor> prostoriFindByQuery = ZahtevKlijent.findByQueryProstor(upit);
            if (!prostoriFindByQuery.isEmpty()) {
                prostorZaIzmenu = prostoriFindByQuery.get(0);
                txtKapacitetProstor.setText(String.valueOf(prostorZaIzmenu.getKapacitet()));
                txtNazivProstor.setText(prostorZaIzmenu.getNaziv());
                if (prostorZaIzmenu.getVrstaProstora().toString().equalsIgnoreCase("ZATVORENI")) {
                    radioButtonZatvoreni.setSelected(true);
                } else {
                    radioButtonOtvoreni.setSelected(true);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_listProstoriMouseClicked

    private void listVrsteProgramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listVrsteProgramaMouseClicked
        setPnlVrstaProgramaEnable(true);
        try {
            String nazivVrstePrograma = listVrstePrograma.getSelectedValue();
            String upit = "SELECT * FROM vrsta_programa WHERE naziv = '" + nazivVrstePrograma + "'";
                List<VrstaPrograma> vrsteProgramaFindByQuery = ZahtevKlijent.findByQueryVrstaPrograma(upit);
                if (!vrsteProgramaFindByQuery.isEmpty()) {
                    System.out.println("Broj clanova liste: " + vrsteProgramaFindByQuery.size());
                    vrstaProgramaZaIzmenu = vrsteProgramaFindByQuery.get(0);
                    txtNazivVrstaPrograma.setText(String.valueOf(vrstaProgramaZaIzmenu.getNaziv()));
                }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_listVrsteProgramaMouseClicked

    private void btnIzmeniVrstaProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniVrstaProgramaActionPerformed
        try {
            int i = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izmenite naziv vreste programa?");
            if (i == 0) {
                String nazivVrstaPrograma = txtNazivVrstaPrograma.getText();
                Validacija.getInstance().isEmpty(nazivVrstaPrograma);
                VrstaPrograma vrstaPrograma = new VrstaPrograma(vrstaProgramaZaIzmenu.getId(), nazivVrstaPrograma);
                ZahtevKlijent.updateVrstaPrograma(vrstaPrograma);
                    JOptionPane.showMessageDialog(this, "Uspesno ste izmenili informacije o vrsti programa!");
                    programi = ZahtevKlijent.findByDayProgrami(dan.getNaziv());
                    MojPanelDanProgram panel = new MojPanelDanProgram(programi, dialog, dan);
                    dialog.add(panel);
                    dialog.pack();
                    pripremiFormu();
                    setPnlVrstaProgramaEnable(true);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnIzmeniVrstaProgramaActionPerformed

    private void btnObrisiVrstaProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiVrstaProgramaActionPerformed
        try {
            List<String> naziviVrstePrograma = listVrstePrograma.getSelectedValuesList();
            if (naziviVrstePrograma.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Niste odabrali nijedan red iz liste!");
            }
            int i = JOptionPane.showConfirmDialog(this, "Da li zaista ≈æelite da obri≈°ete odabrane vrste programa?");
            if (i == 0) {
                for (String nazivVrstePrograma : naziviVrstePrograma) {
                    String upit = "SELECT * FROM vrsta_programa WHERE naziv = '" + nazivVrstePrograma + "'";
                        List<VrstaPrograma> vrstePrograma = ZahtevKlijent.findByQueryVrstaPrograma(upit);
                        VrstaPrograma vrstaProgramaZaBrisanje = vrstePrograma.get(0);
                        ZahtevKlijent.deleteVrstePrograma(vrstaProgramaZaBrisanje);
                }
                JOptionPane.showMessageDialog(this, "Uspesno ste obrisali odabrane vrste programa");
                programi = ZahtevKlijent.findByDayProgrami(dan.getNaziv());
                MojPanelDanProgram panel = new MojPanelDanProgram(programi, dialog, dan);
                dialog.add(panel);
                dialog.pack();
                pripremiFormu();
                setPnlVrstaProgramaEnable(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage(), "Greska", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnObrisiVrstaProgramaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajProstor;
    private javax.swing.JButton btnDodajRed;
    private javax.swing.JButton btnDodajVrstaPrograma;
    private javax.swing.JButton btnIzmeniProstor;
    private javax.swing.JButton btnIzmeniVrstaPrograma;
    private javax.swing.JButton btnObrisiProstor;
    private javax.swing.JButton btnObrisiRed;
    private javax.swing.JButton btnObrisiVrstaPrograma;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnOdustaniProstor;
    private javax.swing.JButton btnOdustaniVrstaPrograma;
    private javax.swing.JButton btnSacuvajIzmene;
    private javax.swing.ButtonGroup buttonGroupVrstaProstora;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblKapacitetProstor;
    private javax.swing.JLabel lblNazivProstor;
    private javax.swing.JLabel lblNazivVrstaPrograma;
    private javax.swing.JList<String> listProstori;
    private javax.swing.JList<String> listVrstePrograma;
    private javax.swing.JPanel pnlProstor;
    private javax.swing.JPanel pnlVrstaPrograma;
    private javax.swing.JPanel pnlVrstaProstora;
    private javax.swing.JRadioButton radioButtonOtvoreni;
    private javax.swing.JRadioButton radioButtonZatvoreni;
    private javax.swing.JTable tblMojPanelDanProgram;
    private javax.swing.JTextField txtKapacitetProstor;
    private javax.swing.JTextField txtNazivProstor;
    private javax.swing.JTextField txtNazivVrstaPrograma;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {

        List<VrstaPrograma> vrstePrograma;
        List<Izvodjac> izvodjaci;
        List<Prostor> prostori;
        JComboBox comboBoxVrstePrograma = new JComboBox();
        JComboBox comboBoxIzvodjaci = new JComboBox();
        JComboBox comboBoxProstori = new JComboBox();
        try {
            vrstePrograma = ZahtevKlijent.getAllVrstaPrograma();
            for (VrstaPrograma vrstaPrograma : vrstePrograma) {
                comboBoxVrstePrograma.addItem(vrstaPrograma.getNaziv());
            }

            izvodjaci = ZahtevKlijent.getAllIzvodjac();
            for (Izvodjac izvodjac : izvodjaci) {
                comboBoxIzvodjaci.addItem(izvodjac.getNaziv());
            }

            prostori = ZahtevKlijent.getAllProstor();
            for (Prostor prostor : prostori) {
                comboBoxProstori.addItem(prostor.getNaziv());
            }

            TableModel model = new ProgramTabelaModel(programi, dan);
            tblMojPanelDanProgram.setModel(model);
            TableColumnModel tcm = tblMojPanelDanProgram.getColumnModel();
            TableColumn tableColumnVrstaPrograma = tcm.getColumn(5);
            tableColumnVrstaPrograma.setCellEditor(new DefaultCellEditor(comboBoxVrstePrograma));

            TableColumn tableColumnIzvodjaci = tcm.getColumn(1);
            tableColumnIzvodjaci.setCellEditor(new DefaultCellEditor(comboBoxIzvodjaci));

            TableColumn tableColumnProstori = tcm.getColumn(6);
            tableColumnProstori.setCellEditor(new DefaultCellEditor(comboBoxProstori));

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Do≈°lo je do gre≈°ke prilikom popunjavanja tabele!");
        }
    }

    private void pripremiFormu() {
        dialog.setTitle(dan.getNaziv() + " - " + dateFormat.format(dan.getDatum()));
        txtKapacitetProstor.setText("");
        txtNazivVrstaPrograma.setText("");
        txtNazivProstor.setText("");
        setPnlProstorEnable(false);
        setPnlVrstaProgramaEnable(false);
        try {
            popuniListe();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        popuniTabelu();
    }

    private void popuniListe() throws Exception {
        List<Prostor> listaProstora;
        try {
            listaProstora = ZahtevKlijent.getAllProstor();
            DefaultListModel listModel = new DefaultListModel();
            listProstori.setModel(listModel);
            for (Prostor prostor : listaProstora) {
                listModel.addElement(prostor.getNaziv());
            }
        } catch (Exception e) {
            throw new Exception(e.getMessage());
        }

        List<VrstaPrograma> listaVrstaPrograma;
        try {
            listaVrstaPrograma = ZahtevKlijent.getAllVrstaPrograma();
            DefaultListModel listModel = new DefaultListModel();
            listVrstePrograma.setModel(listModel);
            for (VrstaPrograma vrstaPrograma : listaVrstaPrograma) {
                listModel.addElement(vrstaPrograma.getNaziv());
            }
        } catch (Exception e) {
            throw new Exception(e.getMessage());
        }
    }

    private void setPnlProstorEnable(boolean signal) {
        pnlVrstaProstora.setEnabled(signal);
        txtKapacitetProstor.setEnabled(signal);
        txtNazivProstor.setEnabled(signal);
        btnDodajProstor.setEnabled(signal);
        lblKapacitetProstor.setEnabled(signal);
        lblNazivProstor.setEnabled(signal);
        pnlProstor.setEnabled(signal);
        radioButtonOtvoreni.setEnabled(signal);
        radioButtonZatvoreni.setEnabled(signal);
        btnOdustaniProstor.setEnabled(signal);
        btnIzmeniProstor.setEnabled(signal);
        btnObrisiProstor.setEnabled(signal);
        listProstori.setEnabled(signal);
    }

    private void setPnlVrstaProgramaEnable(boolean signal) {
        pnlVrstaPrograma.setEnabled(signal);
        txtNazivVrstaPrograma.setEnabled(signal);
        lblNazivVrstaPrograma.setEnabled(signal);
        btnDodajVrstaPrograma.setEnabled(signal);
        btnOdustaniVrstaPrograma.setEnabled(signal);
        btnIzmeniVrstaPrograma.setEnabled(signal);
        listVrstePrograma.setEnabled(signal);
        btnObrisiVrstaPrograma.setEnabled(signal);
    }

}
